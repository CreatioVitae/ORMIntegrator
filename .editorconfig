# 上位ディレクトリから .editorconfig 設定を継承する場合は、以下の行を削除します
root = true

# 共通設定
[*]

#### コア EditorConfig オプション ####

charset = utf-8

# インデントと間隔(indent_sizeも含めたかったが、resx等はindent_size = 2なので、一旦含めない。)
indent_style = space

# Sqlファイル
[*.sql]

#### コア EditorConfig オプション ####

# インデントと間隔
indent_size = 4

# C# ファイル
[*.cs]

#### コア EditorConfig オプション ####

# インデントと間隔
indent_size = 4

# 改行設定
end_of_line = crlf
insert_final_newline = true
trim_trailing_whitespace = true

#### .NET コーディング規則 ####

# using の整理
dotnet_separate_import_directive_groups = false
dotnet_sort_system_directives_first = false

# this. と Me. の設定(thisは冗長なので、必須な場合（例：拡張メソッドの発火にやむを得ず書かなければならない等）を除き、記述しないことを推奨。)
dotnet_style_qualification_for_event = false:warning
dotnet_style_qualification_for_field = false:warning
dotnet_style_qualification_for_method = false:warning
dotnet_style_qualification_for_property = false:warning

# 言語キーワードと BCL の種類の設定（ビルトイン型が用意されている場合はビルトイン型で統一する。※表記揺れ防止のためビルドエラー扱い。）
dotnet_style_predefined_type_for_locals_parameters_members = true:error
dotnet_style_predefined_type_for_member_access = true:error

# かっこの設定（演算子はかっこ推奨。好みの問題なので、リファクタリングのみ有効。）
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_other_operators = never_if_unnecessary:silent
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:silent

# 修飾子設定
dotnet_style_require_accessibility_modifiers = for_non_interface_members:silent

# 式レベルの設定（null合体演算子（他言語でいうところのNullish Coalescing）、null条件演算子（他言語でいうところのOptionalChaining）等、C#6↑で有効になる機能が使える場合は、そちらを優先する。）
dotnet_style_coalesce_expression = true:warning
dotnet_style_collection_initializer = true:warning
dotnet_style_explicit_tuple_names = true:warning
dotnet_style_null_propagation = true:warning
dotnet_style_object_initializer = true:warning
dotnet_style_prefer_auto_properties = true:warning
dotnet_style_prefer_compound_assignment = true:suggestion
dotnet_style_prefer_conditional_expression_over_assignment = true:suggestion
dotnet_style_prefer_conditional_expression_over_return = true:suggestion
dotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion
dotnet_style_prefer_inferred_tuple_names = true:suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:warning

# フィールド設定
dotnet_style_readonly_field = true:suggestion

# パラメーターの設定
dotnet_code_quality_unused_parameters = all:suggestion

#### C# コーディング規則 ####

# var を優先(built-in型、右辺が自明のパターンでは警告扱い。ラムダやswitch式などのような左辺見て推論する系のようなそもそも推論できないやつ以外は全部var推奨。)
csharp_style_var_elsewhere = true:suggestion
csharp_style_var_for_built_in_types = true:warning
csharp_style_var_when_type_is_apparent = true:warning

# 式のようなメンバー（アクセサー、Constructor、メソッド（public,private local問わず）、プロパティ等、式で表せる場合は式を優先する。）
csharp_style_expression_bodied_accessors = true:suggestion
csharp_style_expression_bodied_constructors = true:suggestion
csharp_style_expression_bodied_indexers = true:suggestion
csharp_style_expression_bodied_lambdas = true:suggestion
csharp_style_expression_bodied_local_functions = true:suggestion
csharp_style_expression_bodied_methods = true:suggestion
csharp_style_expression_bodied_operators = true:silent
csharp_style_expression_bodied_properties = true:suggestion

# パターン マッチング設定（パターンマッチングが書けるケースではパターンマッチングの使用推奨。）
csharp_style_pattern_matching_over_as_with_null_check = true:warning
csharp_style_pattern_matching_over_is_with_cast_check = true:warning
csharp_style_prefer_switch_expression = true:warning

# Null チェック設定（nullチェックのifステートメントより、null合体演算子,null条件演算子を優先する。）
csharp_style_conditional_delegate_call = true:warning

# 修飾子設定（ローカル関数は変数キャプチャすることを避けるためにstaticキーワードを必ず付与する。（C#8↑限定））
csharp_prefer_static_local_function = true:error
csharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async

# コード ブロックの設定
csharp_prefer_braces = true:warning
csharp_prefer_simple_using_statement = true:suggestion

# 式レベルの設定（Defaultは簡易記述推奨。throwもステートメントより式推奨。）
csharp_prefer_simple_default_expression = true:warning
csharp_style_deconstructed_variable_declaration = true:suggestion
csharp_style_inlined_variable_declaration = true:suggestion
csharp_style_pattern_local_over_anonymous_function = true:suggestion
csharp_style_prefer_index_operator = true:suggestion
csharp_style_prefer_range_operator = true:suggestion
csharp_style_throw_expression = true:warning
csharp_style_unused_value_assignment_preference = discard_variable:suggestion
csharp_style_unused_value_expression_statement_preference = discard_variable:silent

# 'using' ディレクティブの基本設定
csharp_using_directive_placement = outside_namespace:suggestion

#### C# 書式ルール ####

# 改行設定
csharp_new_line_before_catch = true
csharp_new_line_before_else = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_open_brace = none
csharp_new_line_between_query_expression_clauses = true

# インデント設定
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents = true
csharp_indent_case_contents_when_block = true
csharp_indent_labels = one_less_than_current
csharp_indent_switch_labels = true

# スペース設定
csharp_space_after_cast = false
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_after_comma = true
csharp_space_after_dot = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_after_semicolon_in_for_statement = true
csharp_space_around_binary_operators = before_and_after
csharp_space_around_declaration_statements = false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_before_comma = false
csharp_space_before_dot = false
csharp_space_before_open_square_brackets = false
csharp_space_before_semicolon_in_for_statement = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false
csharp_space_between_square_brackets = false

# 折り返しの設定
csharp_preserve_single_line_blocks = true
csharp_preserve_single_line_statements = true

#### 命名スタイル ####

# 名前付けルール

dotnet_naming_rule.interface_should_be_i_で始まる.severity = suggestion
dotnet_naming_rule.interface_should_be_i_で始まる.symbols = interface
dotnet_naming_rule.interface_should_be_i_で始まる.style = i_で始まる

dotnet_naming_rule.型_should_be_パスカル_ケース.severity = suggestion
dotnet_naming_rule.型_should_be_パスカル_ケース.symbols = 型
dotnet_naming_rule.型_should_be_パスカル_ケース.style = パスカル_ケース

dotnet_naming_rule.フィールド以外のメンバー_should_be_パスカル_ケース.severity = suggestion
dotnet_naming_rule.フィールド以外のメンバー_should_be_パスカル_ケース.symbols = フィールド以外のメンバー
dotnet_naming_rule.フィールド以外のメンバー_should_be_パスカル_ケース.style = パスカル_ケース

# 記号の仕様

dotnet_naming_symbols.interface.applicable_kinds = interface
dotnet_naming_symbols.interface.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.interface.required_modifiers = 

dotnet_naming_symbols.型.applicable_kinds = class, struct, interface, enum
dotnet_naming_symbols.型.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.型.required_modifiers = 

dotnet_naming_symbols.フィールド以外のメンバー.applicable_kinds = property, event, method
dotnet_naming_symbols.フィールド以外のメンバー.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.フィールド以外のメンバー.required_modifiers = 

# 命名スタイル

dotnet_naming_style.パスカル_ケース.required_prefix = 
dotnet_naming_style.パスカル_ケース.required_suffix = 
dotnet_naming_style.パスカル_ケース.word_separator = 
dotnet_naming_style.パスカル_ケース.capitalization = pascal_case

dotnet_naming_style.i_で始まる.required_prefix = I
dotnet_naming_style.i_で始まる.required_suffix = 
dotnet_naming_style.i_で始まる.word_separator = 
dotnet_naming_style.i_で始まる.capitalization = pascal_case
